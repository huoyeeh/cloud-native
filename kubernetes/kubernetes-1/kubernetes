kubernetesr入门

===================   云原生简介 =======================
04Google 使用容器技术  08 Google将cgroup合并进入内核  13 docker  14k8s  15cncf  

毕业和未毕业。第一个毕业的是k8s。

云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式API。

这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。


容器：docker，服务网格：service Mesh等。 

微服务：体系结构中，一个项目是由多个松耦合且可独立部署得较小组件或服务组成。
不可变基础设施： 一个应用所需要得基本运行需求。  指运行服务得服务器在完成部署后，不在进行更改，比如镜像等。
声明式API: 描述应用程序得运行状态，并且由系统来决定如何创建这个环境，列如声明一个pod，会有k8s执行创建并维持副本。


1、云原生特征
    符合12因素应用。
        1.基准代码。2.依赖。 3.配置。 4.后端服务。 5.构建，发布，运行。6.进程。
        7.端口绑定。8.并发。9.易处理。10.开发环境与线上环境等价。11.日志，12.管理进程。

    面向微服务架构
    自服务敏捷架构
    基于API的协作
    抗脆弱性。


    沙箱  孵化 毕业。  

================= k8s 简介 =====================
1、api-server port:6443
    API server 验证并配置API对象的数据，这些对象包括pods，services等，api server 提供为rest操作提供服务，并为集群的共享状态提供前端，
    其它组件都通过改前端进行交互。

    api - server 访问的入口。验证 ，鉴权，授权。

2、kube-scheduler
    调度器，接收容器的调度请求，并返回请求。

3、etcd 
    存储k8s里面的对象资源数据，保存一些事件。由api-server 写入事件。

4、controller-manager
    contrller-magager 包括一些子控制器（副本控制器，节点控制器，命名空间控制器和服务账号控制器等）
    控制器作为集群内部的管理控制中心，负责集群内的NODE ，pod副本，服务端点（EP）、namespace、SA，
    资源定额（ResourceQuote）的管理。

5、kubelet 
     接收并执行Master发来的指令，管理由Scheduler绑定至当前节点上的Pod对象的容器
        

6、kube-proxy
    运行于每个Worker节点上，专用于负责将Service资源的定义转为节点本地的实现


    2、架构部署的高可用
        master 里面三节点 apiserver 高可用， 通过lvs 高可用 vip

        多个节点。  etcd 高可用。


master 2c4g   etcd 2c2g  haproxy 1c1g node 4c4g



2、安装k8s
